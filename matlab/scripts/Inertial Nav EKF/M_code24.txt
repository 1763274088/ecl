SH_TAS = zeros(3,1);
SH_TAS(1) = 1/((ve - vwe)^2 + (vn - vwn)^2 + vd^2)^(1/2);
SH_TAS(2) = (SH_TAS(1)*(2*ve - 2*vwe))/2;
SH_TAS(3) = (SH_TAS(1)*(2*vn - 2*vwn))/2;
H_TAS = zeros(1,24);
H_TAS(1,5) = SH_TAS(3);
H_TAS(1,6) = SH_TAS(2);
H_TAS(1,7) = vd*SH_TAS(1);
H_TAS(1,23) = -SH_TAS(3);
H_TAS(1,24) = -SH_TAS(2);
SK_TAS = zeros(2,1);
SK_TAS(1) = 1/(R_TAS + SH_TAS(3)*(OP(5,5)*SH_TAS(3) + OP(6,5)*SH_TAS(2) - OP(23,5)*SH_TAS(3) - OP(24,5)*SH_TAS(2) + OP(7,5)*vd*SH_TAS(1)) + SH_TAS(2)*(OP(5,6)*SH_TAS(3) + OP(6,6)*SH_TAS(2) - OP(23,6)*SH_TAS(3) - OP(24,6)*SH_TAS(2) + OP(7,6)*vd*SH_TAS(1)) - SH_TAS(3)*(OP(5,23)*SH_TAS(3) + OP(6,23)*SH_TAS(2) - OP(23,23)*SH_TAS(3) - OP(24,23)*SH_TAS(2) + OP(7,23)*vd*SH_TAS(1)) - SH_TAS(2)*(OP(5,24)*SH_TAS(3) + OP(6,24)*SH_TAS(2) - OP(23,24)*SH_TAS(3) - OP(24,24)*SH_TAS(2) + OP(7,24)*vd*SH_TAS(1)) + vd*SH_TAS(1)*(OP(5,7)*SH_TAS(3) + OP(6,7)*SH_TAS(2) - OP(23,7)*SH_TAS(3) - OP(24,7)*SH_TAS(2) + OP(7,7)*vd*SH_TAS(1)));
SK_TAS(2) = SH_TAS(2);
Kfusion = zeros(24,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_TAS(1)*(OP(1,5)*SH_TAS(3) - OP(1,23)*SH_TAS(3) + OP(1,6)*SK_TAS(2) - OP(1,24)*SK_TAS(2) + OP(1,7)*vd*SH_TAS(1));
Kfusion(2) = SK_TAS(1)*(OP(2,5)*SH_TAS(3) - OP(2,23)*SH_TAS(3) + OP(2,6)*SK_TAS(2) - OP(2,24)*SK_TAS(2) + OP(2,7)*vd*SH_TAS(1));
Kfusion(3) = SK_TAS(1)*(OP(3,5)*SH_TAS(3) - OP(3,23)*SH_TAS(3) + OP(3,6)*SK_TAS(2) - OP(3,24)*SK_TAS(2) + OP(3,7)*vd*SH_TAS(1));
Kfusion(4) = SK_TAS(1)*(OP(4,5)*SH_TAS(3) - OP(4,23)*SH_TAS(3) + OP(4,6)*SK_TAS(2) - OP(4,24)*SK_TAS(2) + OP(4,7)*vd*SH_TAS(1));
Kfusion(5) = SK_TAS(1)*(OP(5,5)*SH_TAS(3) - OP(5,23)*SH_TAS(3) + OP(5,6)*SK_TAS(2) - OP(5,24)*SK_TAS(2) + OP(5,7)*vd*SH_TAS(1));
Kfusion(6) = SK_TAS(1)*(OP(6,5)*SH_TAS(3) - OP(6,23)*SH_TAS(3) + OP(6,6)*SK_TAS(2) - OP(6,24)*SK_TAS(2) + OP(6,7)*vd*SH_TAS(1));
Kfusion(7) = SK_TAS(1)*(OP(7,5)*SH_TAS(3) - OP(7,23)*SH_TAS(3) + OP(7,6)*SK_TAS(2) - OP(7,24)*SK_TAS(2) + OP(7,7)*vd*SH_TAS(1));
Kfusion(8) = SK_TAS(1)*(OP(8,5)*SH_TAS(3) - OP(8,23)*SH_TAS(3) + OP(8,6)*SK_TAS(2) - OP(8,24)*SK_TAS(2) + OP(8,7)*vd*SH_TAS(1));
Kfusion(9) = SK_TAS(1)*(OP(9,5)*SH_TAS(3) - OP(9,23)*SH_TAS(3) + OP(9,6)*SK_TAS(2) - OP(9,24)*SK_TAS(2) + OP(9,7)*vd*SH_TAS(1));
Kfusion(10) = SK_TAS(1)*(OP(10,5)*SH_TAS(3) - OP(10,23)*SH_TAS(3) + OP(10,6)*SK_TAS(2) - OP(10,24)*SK_TAS(2) + OP(10,7)*vd*SH_TAS(1));
Kfusion(11) = SK_TAS(1)*(OP(11,5)*SH_TAS(3) - OP(11,23)*SH_TAS(3) + OP(11,6)*SK_TAS(2) - OP(11,24)*SK_TAS(2) + OP(11,7)*vd*SH_TAS(1));
Kfusion(12) = SK_TAS(1)*(OP(12,5)*SH_TAS(3) - OP(12,23)*SH_TAS(3) + OP(12,6)*SK_TAS(2) - OP(12,24)*SK_TAS(2) + OP(12,7)*vd*SH_TAS(1));
Kfusion(13) = SK_TAS(1)*(OP(13,5)*SH_TAS(3) - OP(13,23)*SH_TAS(3) + OP(13,6)*SK_TAS(2) - OP(13,24)*SK_TAS(2) + OP(13,7)*vd*SH_TAS(1));
Kfusion(14) = SK_TAS(1)*(OP(14,5)*SH_TAS(3) - OP(14,23)*SH_TAS(3) + OP(14,6)*SK_TAS(2) - OP(14,24)*SK_TAS(2) + OP(14,7)*vd*SH_TAS(1));
Kfusion(15) = SK_TAS(1)*(OP(15,5)*SH_TAS(3) - OP(15,23)*SH_TAS(3) + OP(15,6)*SK_TAS(2) - OP(15,24)*SK_TAS(2) + OP(15,7)*vd*SH_TAS(1));
Kfusion(16) = SK_TAS(1)*(OP(16,5)*SH_TAS(3) - OP(16,23)*SH_TAS(3) + OP(16,6)*SK_TAS(2) - OP(16,24)*SK_TAS(2) + OP(16,7)*vd*SH_TAS(1));
Kfusion(17) = SK_TAS(1)*(OP(17,5)*SH_TAS(3) - OP(17,23)*SH_TAS(3) + OP(17,6)*SK_TAS(2) - OP(17,24)*SK_TAS(2) + OP(17,7)*vd*SH_TAS(1));
Kfusion(18) = SK_TAS(1)*(OP(18,5)*SH_TAS(3) - OP(18,23)*SH_TAS(3) + OP(18,6)*SK_TAS(2) - OP(18,24)*SK_TAS(2) + OP(18,7)*vd*SH_TAS(1));
Kfusion(19) = SK_TAS(1)*(OP(19,5)*SH_TAS(3) - OP(19,23)*SH_TAS(3) + OP(19,6)*SK_TAS(2) - OP(19,24)*SK_TAS(2) + OP(19,7)*vd*SH_TAS(1));
Kfusion(20) = SK_TAS(1)*(OP(20,5)*SH_TAS(3) - OP(20,23)*SH_TAS(3) + OP(20,6)*SK_TAS(2) - OP(20,24)*SK_TAS(2) + OP(20,7)*vd*SH_TAS(1));
Kfusion(21) = SK_TAS(1)*(OP(21,5)*SH_TAS(3) - OP(21,23)*SH_TAS(3) + OP(21,6)*SK_TAS(2) - OP(21,24)*SK_TAS(2) + OP(21,7)*vd*SH_TAS(1));
Kfusion(22) = SK_TAS(1)*(OP(22,5)*SH_TAS(3) - OP(22,23)*SH_TAS(3) + OP(22,6)*SK_TAS(2) - OP(22,24)*SK_TAS(2) + OP(22,7)*vd*SH_TAS(1));
Kfusion(23) = SK_TAS(1)*(OP(23,5)*SH_TAS(3) - OP(23,23)*SH_TAS(3) + OP(23,6)*SK_TAS(2) - OP(23,24)*SK_TAS(2) + OP(23,7)*vd*SH_TAS(1));
Kfusion(24) = SK_TAS(1)*(OP(24,5)*SH_TAS(3) - OP(24,23)*SH_TAS(3) + OP(24,6)*SK_TAS(2) - OP(24,24)*SK_TAS(2) + OP(24,7)*vd*SH_TAS(1));
SH_TASX = zeros(2,1);
SH_TASX(1) = vn - vwn;
SH_TASX(2) = ve - vwe;
H_TASX = zeros(1,24);
H_TASX(1,1) = 2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd;
H_TASX(1,2) = 2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd;
H_TASX(1,3) = 2*q1*SH_TASX(2) - 2*q2*SH_TASX(1) - 2*q0*vd;
H_TASX(1,4) = 2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd;
H_TASX(1,5) = q0^2 + q1^2 - q2^2 - q3^2;
H_TASX(1,6) = 2*q0*q3 + 2*q1*q2;
H_TASX(1,7) = 2*q1*q3 - 2*q0*q2;
H_TASX(1,23) = q2^2 - q1^2 - q0^2 + q3^2;
H_TASX(1,24) = - 2*q0*q3 - 2*q1*q2;
SK_TASX = zeros(8,1);
SK_TASX(1) = 1/(R_TAS + (q0^2 + q1^2 - q2^2 - q3^2)*(OP(5,5)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,5)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,5)*(2*q0*q3 + 2*q1*q2) - OP(7,5)*(2*q0*q2 - 2*q1*q3) - OP(24,5)*(2*q0*q3 + 2*q1*q2) + OP(1,5)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,5)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,5)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,5)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) - (q0^2 + q1^2 - q2^2 - q3^2)*(OP(5,23)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,23)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,23)*(2*q0*q3 + 2*q1*q2) - OP(7,23)*(2*q0*q2 - 2*q1*q3) - OP(24,23)*(2*q0*q3 + 2*q1*q2) + OP(1,23)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,23)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,23)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,23)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) + (2*q0*q3 + 2*q1*q2)*(OP(5,6)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,6)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,6)*(2*q0*q3 + 2*q1*q2) - OP(7,6)*(2*q0*q2 - 2*q1*q3) - OP(24,6)*(2*q0*q3 + 2*q1*q2) + OP(1,6)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,6)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,6)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,6)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) - (2*q0*q2 - 2*q1*q3)*(OP(5,7)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,7)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,7)*(2*q0*q3 + 2*q1*q2) - OP(7,7)*(2*q0*q2 - 2*q1*q3) - OP(24,7)*(2*q0*q3 + 2*q1*q2) + OP(1,7)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,7)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,7)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,7)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) - (2*q0*q3 + 2*q1*q2)*(OP(5,24)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,24)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,24)*(2*q0*q3 + 2*q1*q2) - OP(7,24)*(2*q0*q2 - 2*q1*q3) - OP(24,24)*(2*q0*q3 + 2*q1*q2) + OP(1,24)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,24)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,24)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,24)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) + (2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd)*(OP(5,1)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,1)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,1)*(2*q0*q3 + 2*q1*q2) - OP(7,1)*(2*q0*q2 - 2*q1*q3) - OP(24,1)*(2*q0*q3 + 2*q1*q2) + OP(1,1)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,1)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,1)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,1)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) + (2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd)*(OP(5,2)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,2)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,2)*(2*q0*q3 + 2*q1*q2) - OP(7,2)*(2*q0*q2 - 2*q1*q3) - OP(24,2)*(2*q0*q3 + 2*q1*q2) + OP(1,2)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,2)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,2)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,2)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) - (2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd)*(OP(5,3)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,3)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,3)*(2*q0*q3 + 2*q1*q2) - OP(7,3)*(2*q0*q2 - 2*q1*q3) - OP(24,3)*(2*q0*q3 + 2*q1*q2) + OP(1,3)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,3)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,3)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,3)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)) + (2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)*(OP(5,4)*(q0^2 + q1^2 - q2^2 - q3^2) - OP(23,4)*(q0^2 + q1^2 - q2^2 - q3^2) + OP(6,4)*(2*q0*q3 + 2*q1*q2) - OP(7,4)*(2*q0*q2 - 2*q1*q3) - OP(24,4)*(2*q0*q3 + 2*q1*q2) + OP(1,4)*(2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd) + OP(2,4)*(2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd) - OP(3,4)*(2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd) + OP(4,4)*(2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd)));
SK_TASX(2) = q0^2 + q1^2 - q2^2 - q3^2;
SK_TASX(3) = 2*q0*q3 + 2*q1*q2;
SK_TASX(4) = 2*q0*SH_TASX(2) - 2*q3*SH_TASX(1) + 2*q1*vd;
SK_TASX(5) = 2*q2*SH_TASX(1) - 2*q1*SH_TASX(2) + 2*q0*vd;
SK_TASX(6) = 2*q0*SH_TASX(1) + 2*q3*SH_TASX(2) - 2*q2*vd;
SK_TASX(7) = 2*q1*SH_TASX(1) + 2*q2*SH_TASX(2) + 2*q3*vd;
SK_TASX(8) = 2*q0*q2 - 2*q1*q3;
Kfusion = zeros(24,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_TASX(1)*(OP(1,1)*SK_TASX(6) + OP(1,5)*SK_TASX(2) - OP(1,3)*SK_TASX(5) + OP(1,4)*SK_TASX(4) + OP(1,2)*SK_TASX(7) + OP(1,6)*SK_TASX(3) - OP(1,7)*SK_TASX(8) - OP(1,23)*SK_TASX(2) - OP(1,24)*SK_TASX(3));
Kfusion(2) = SK_TASX(1)*(OP(2,1)*SK_TASX(6) + OP(2,5)*SK_TASX(2) - OP(2,3)*SK_TASX(5) + OP(2,4)*SK_TASX(4) + OP(2,2)*SK_TASX(7) + OP(2,6)*SK_TASX(3) - OP(2,7)*SK_TASX(8) - OP(2,23)*SK_TASX(2) - OP(2,24)*SK_TASX(3));
Kfusion(3) = SK_TASX(1)*(OP(3,1)*SK_TASX(6) + OP(3,5)*SK_TASX(2) - OP(3,3)*SK_TASX(5) + OP(3,4)*SK_TASX(4) + OP(3,2)*SK_TASX(7) + OP(3,6)*SK_TASX(3) - OP(3,7)*SK_TASX(8) - OP(3,23)*SK_TASX(2) - OP(3,24)*SK_TASX(3));
Kfusion(4) = SK_TASX(1)*(OP(4,1)*SK_TASX(6) + OP(4,5)*SK_TASX(2) - OP(4,3)*SK_TASX(5) + OP(4,4)*SK_TASX(4) + OP(4,2)*SK_TASX(7) + OP(4,6)*SK_TASX(3) - OP(4,7)*SK_TASX(8) - OP(4,23)*SK_TASX(2) - OP(4,24)*SK_TASX(3));
Kfusion(5) = SK_TASX(1)*(OP(5,1)*SK_TASX(6) + OP(5,5)*SK_TASX(2) - OP(5,3)*SK_TASX(5) + OP(5,4)*SK_TASX(4) + OP(5,2)*SK_TASX(7) + OP(5,6)*SK_TASX(3) - OP(5,7)*SK_TASX(8) - OP(5,23)*SK_TASX(2) - OP(5,24)*SK_TASX(3));
Kfusion(6) = SK_TASX(1)*(OP(6,1)*SK_TASX(6) + OP(6,5)*SK_TASX(2) - OP(6,3)*SK_TASX(5) + OP(6,4)*SK_TASX(4) + OP(6,2)*SK_TASX(7) + OP(6,6)*SK_TASX(3) - OP(6,7)*SK_TASX(8) - OP(6,23)*SK_TASX(2) - OP(6,24)*SK_TASX(3));
Kfusion(7) = SK_TASX(1)*(OP(7,1)*SK_TASX(6) + OP(7,5)*SK_TASX(2) - OP(7,3)*SK_TASX(5) + OP(7,4)*SK_TASX(4) + OP(7,2)*SK_TASX(7) + OP(7,6)*SK_TASX(3) - OP(7,7)*SK_TASX(8) - OP(7,23)*SK_TASX(2) - OP(7,24)*SK_TASX(3));
Kfusion(8) = SK_TASX(1)*(OP(8,1)*SK_TASX(6) + OP(8,5)*SK_TASX(2) - OP(8,3)*SK_TASX(5) + OP(8,4)*SK_TASX(4) + OP(8,2)*SK_TASX(7) + OP(8,6)*SK_TASX(3) - OP(8,7)*SK_TASX(8) - OP(8,23)*SK_TASX(2) - OP(8,24)*SK_TASX(3));
Kfusion(9) = SK_TASX(1)*(OP(9,1)*SK_TASX(6) + OP(9,5)*SK_TASX(2) - OP(9,3)*SK_TASX(5) + OP(9,4)*SK_TASX(4) + OP(9,2)*SK_TASX(7) + OP(9,6)*SK_TASX(3) - OP(9,7)*SK_TASX(8) - OP(9,23)*SK_TASX(2) - OP(9,24)*SK_TASX(3));
Kfusion(10) = SK_TASX(1)*(OP(10,1)*SK_TASX(6) + OP(10,5)*SK_TASX(2) - OP(10,3)*SK_TASX(5) + OP(10,4)*SK_TASX(4) + OP(10,2)*SK_TASX(7) + OP(10,6)*SK_TASX(3) - OP(10,7)*SK_TASX(8) - OP(10,23)*SK_TASX(2) - OP(10,24)*SK_TASX(3));
Kfusion(11) = SK_TASX(1)*(OP(11,1)*SK_TASX(6) + OP(11,5)*SK_TASX(2) - OP(11,3)*SK_TASX(5) + OP(11,4)*SK_TASX(4) + OP(11,2)*SK_TASX(7) + OP(11,6)*SK_TASX(3) - OP(11,7)*SK_TASX(8) - OP(11,23)*SK_TASX(2) - OP(11,24)*SK_TASX(3));
Kfusion(12) = SK_TASX(1)*(OP(12,1)*SK_TASX(6) + OP(12,5)*SK_TASX(2) - OP(12,3)*SK_TASX(5) + OP(12,4)*SK_TASX(4) + OP(12,2)*SK_TASX(7) + OP(12,6)*SK_TASX(3) - OP(12,7)*SK_TASX(8) - OP(12,23)*SK_TASX(2) - OP(12,24)*SK_TASX(3));
Kfusion(13) = SK_TASX(1)*(OP(13,1)*SK_TASX(6) + OP(13,5)*SK_TASX(2) - OP(13,3)*SK_TASX(5) + OP(13,4)*SK_TASX(4) + OP(13,2)*SK_TASX(7) + OP(13,6)*SK_TASX(3) - OP(13,7)*SK_TASX(8) - OP(13,23)*SK_TASX(2) - OP(13,24)*SK_TASX(3));
Kfusion(14) = SK_TASX(1)*(OP(14,1)*SK_TASX(6) + OP(14,5)*SK_TASX(2) - OP(14,3)*SK_TASX(5) + OP(14,4)*SK_TASX(4) + OP(14,2)*SK_TASX(7) + OP(14,6)*SK_TASX(3) - OP(14,7)*SK_TASX(8) - OP(14,23)*SK_TASX(2) - OP(14,24)*SK_TASX(3));
Kfusion(15) = SK_TASX(1)*(OP(15,1)*SK_TASX(6) + OP(15,5)*SK_TASX(2) - OP(15,3)*SK_TASX(5) + OP(15,4)*SK_TASX(4) + OP(15,2)*SK_TASX(7) + OP(15,6)*SK_TASX(3) - OP(15,7)*SK_TASX(8) - OP(15,23)*SK_TASX(2) - OP(15,24)*SK_TASX(3));
Kfusion(16) = SK_TASX(1)*(OP(16,1)*SK_TASX(6) + OP(16,5)*SK_TASX(2) - OP(16,3)*SK_TASX(5) + OP(16,4)*SK_TASX(4) + OP(16,2)*SK_TASX(7) + OP(16,6)*SK_TASX(3) - OP(16,7)*SK_TASX(8) - OP(16,23)*SK_TASX(2) - OP(16,24)*SK_TASX(3));
Kfusion(17) = SK_TASX(1)*(OP(17,1)*SK_TASX(6) + OP(17,5)*SK_TASX(2) - OP(17,3)*SK_TASX(5) + OP(17,4)*SK_TASX(4) + OP(17,2)*SK_TASX(7) + OP(17,6)*SK_TASX(3) - OP(17,7)*SK_TASX(8) - OP(17,23)*SK_TASX(2) - OP(17,24)*SK_TASX(3));
Kfusion(18) = SK_TASX(1)*(OP(18,1)*SK_TASX(6) + OP(18,5)*SK_TASX(2) - OP(18,3)*SK_TASX(5) + OP(18,4)*SK_TASX(4) + OP(18,2)*SK_TASX(7) + OP(18,6)*SK_TASX(3) - OP(18,7)*SK_TASX(8) - OP(18,23)*SK_TASX(2) - OP(18,24)*SK_TASX(3));
Kfusion(19) = SK_TASX(1)*(OP(19,1)*SK_TASX(6) + OP(19,5)*SK_TASX(2) - OP(19,3)*SK_TASX(5) + OP(19,4)*SK_TASX(4) + OP(19,2)*SK_TASX(7) + OP(19,6)*SK_TASX(3) - OP(19,7)*SK_TASX(8) - OP(19,23)*SK_TASX(2) - OP(19,24)*SK_TASX(3));
Kfusion(20) = SK_TASX(1)*(OP(20,1)*SK_TASX(6) + OP(20,5)*SK_TASX(2) - OP(20,3)*SK_TASX(5) + OP(20,4)*SK_TASX(4) + OP(20,2)*SK_TASX(7) + OP(20,6)*SK_TASX(3) - OP(20,7)*SK_TASX(8) - OP(20,23)*SK_TASX(2) - OP(20,24)*SK_TASX(3));
Kfusion(21) = SK_TASX(1)*(OP(21,1)*SK_TASX(6) + OP(21,5)*SK_TASX(2) - OP(21,3)*SK_TASX(5) + OP(21,4)*SK_TASX(4) + OP(21,2)*SK_TASX(7) + OP(21,6)*SK_TASX(3) - OP(21,7)*SK_TASX(8) - OP(21,23)*SK_TASX(2) - OP(21,24)*SK_TASX(3));
Kfusion(22) = SK_TASX(1)*(OP(22,1)*SK_TASX(6) + OP(22,5)*SK_TASX(2) - OP(22,3)*SK_TASX(5) + OP(22,4)*SK_TASX(4) + OP(22,2)*SK_TASX(7) + OP(22,6)*SK_TASX(3) - OP(22,7)*SK_TASX(8) - OP(22,23)*SK_TASX(2) - OP(22,24)*SK_TASX(3));
Kfusion(23) = SK_TASX(1)*(OP(23,1)*SK_TASX(6) + OP(23,5)*SK_TASX(2) - OP(23,3)*SK_TASX(5) + OP(23,4)*SK_TASX(4) + OP(23,2)*SK_TASX(7) + OP(23,6)*SK_TASX(3) - OP(23,7)*SK_TASX(8) - OP(23,23)*SK_TASX(2) - OP(23,24)*SK_TASX(3));
Kfusion(24) = SK_TASX(1)*(OP(24,1)*SK_TASX(6) + OP(24,5)*SK_TASX(2) - OP(24,3)*SK_TASX(5) + OP(24,4)*SK_TASX(4) + OP(24,2)*SK_TASX(7) + OP(24,6)*SK_TASX(3) - OP(24,7)*SK_TASX(8) - OP(24,23)*SK_TASX(2) - OP(24,24)*SK_TASX(3));
